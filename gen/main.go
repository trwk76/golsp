package main

import (
	code "github.com/trwk76/go-code"
	g "github.com/trwk76/go-code/go"
)

func main() {
	mdl := LoadModel()

	unit := g.Unit{
		Prefix:  g.Comment(" THIS FILE IS AUTOMATICALLY GENERATED; DO NOT EDIT"),
		Package: g.PkgName("lsp"),
	}

	tdecls := g.TypeDecls{}

	for _, t := range mdl.Structures {
		bases := make([]g.Type, 0)
		flds := make([]g.StructField, 0)

		for _, base := range t.Extends {
			bases = append(bases, g.Symbol{ID: g.ID(base.Impl.(*ReferenceType).Name)})
		}

		for _, prop := range t.Properties {
			tag := prop.Name

			if prop.Optional {
				tag += ",omitempty"
			}

			flds = append(flds, g.StructField{
				ID:   g.ID(code.IDToPascal(prop.Name)),
				Type: g.String,
				Tags: g.Tags{{
					Name:  "json",
					Value: tag,
				}},
			})
		}

		tdecls = append(tdecls, g.TypeDecl{
			ID: g.ID(t.Name),
			Spec: g.StructType{
				Bases:  bases,
				Fields: flds,
			},
		})
	}

	unit.Decls = append(unit.Decls, tdecls)

	code.WriteFile("../model_gen.go", "\t", func(w *code.Writer) { unit.Write(w) })
}
